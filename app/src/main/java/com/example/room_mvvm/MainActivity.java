package com.example.room_mvvm;import android.content.Intent;import android.os.Bundle;import android.view.Menu;import android.view.MenuInflater;import android.view.MenuItem;import android.widget.Toast;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import androidx.appcompat.app.AppCompatActivity;import androidx.lifecycle.Observer;import androidx.lifecycle.ViewModelProviders;import androidx.recyclerview.widget.ItemTouchHelper;import androidx.recyclerview.widget.LinearLayoutManager;import androidx.recyclerview.widget.RecyclerView;import com.google.android.material.floatingactionbutton.FloatingActionButton;import java.util.List;public class MainActivity extends AppCompatActivity {    NoteViewModel noteViewModel;    RecyclerView recyclerView;    FloatingActionButton fab;    public static final int ADD_NOTE_REQUEST_CODE = 1;    NoteAdapter noteAdapter;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        fab = findViewById(R.id.fab);        fab.setOnClickListener(v -> {            Intent i = new Intent(MainActivity.this, AddNoteActivity.class);            startActivityForResult(i, ADD_NOTE_REQUEST_CODE);        });        recyclerView = findViewById(R.id.recyclerview);        recyclerView.setLayoutManager(new LinearLayoutManager(this));        noteAdapter = new NoteAdapter();        recyclerView.setAdapter(noteAdapter);        noteViewModel = ViewModelProviders.of(MainActivity.this).get(NoteViewModel.class);        noteViewModel.getAllNotes().observe(MainActivity.this, new Observer<List<Note>>() {            @Override            public void onChanged(List<Note> notes) {                // Toast.makeText(MainActivity.this, "on changed triggered", Toast.LENGTH_SHORT).show();                noteAdapter.setNotes(notes);            }        });        new ItemTouchHelper(new ItemTouchHelper.SimpleCallback(0, ItemTouchHelper.LEFT | ItemTouchHelper.RIGHT) {            @Override            public boolean onMove(@NonNull RecyclerView recyclerView, @NonNull RecyclerView.ViewHolder viewHolder, @NonNull RecyclerView.ViewHolder target) {                return false;            }            @Override            public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction) {                noteViewModel.delete(noteAdapter.getNoteAt(viewHolder.getAdapterPosition()));                Toast.makeText(MainActivity.this, "Note deleted", Toast.LENGTH_SHORT).show();            }        }).attachToRecyclerView(recyclerView);    }    @Override    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {        super.onActivityResult(requestCode, resultCode, data);        if (requestCode == ADD_NOTE_REQUEST_CODE && resultCode == RESULT_OK) {            String title = data.getStringExtra(AddNoteActivity.EXTRA_TITLE);            String des = data.getStringExtra(AddNoteActivity.EXTRA_DESCRIPTION);            int priority = data.getIntExtra(AddNoteActivity.EXTRA_PRIORITY, 1);            Note note = new Note(title, des, priority);            noteViewModel.insert(note);            Toast.makeText(this, "Note saved successfully", Toast.LENGTH_SHORT).show();        } else {            Toast.makeText(this, "Not was not saved", Toast.LENGTH_SHORT).show();        }    }    @Override    public boolean onCreateOptionsMenu(Menu menu) {        MenuInflater inflater = getMenuInflater();        inflater.inflate(R.menu.delete_all_notes, menu);        return true;    }    @Override    public boolean onOptionsItemSelected(@NonNull MenuItem item) {        switch (item.getItemId()) {            case R.id.deleteAll:                noteViewModel.deleteAll();                noteAdapter.notifyDataSetChanged();        }        return super.onOptionsItemSelected(item);    }}