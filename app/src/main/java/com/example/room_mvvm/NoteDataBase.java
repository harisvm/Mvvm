package com.example.room_mvvm;import android.content.Context;import android.os.AsyncTask;import androidx.annotation.NonNull;import androidx.room.Database;import androidx.room.Room;import androidx.room.RoomDatabase;import androidx.sqlite.db.SupportSQLiteDatabase;@Database(entities = Note.class, version = 1)public abstract class NoteDataBase extends RoomDatabase {	private static NoteDataBase instance;	public abstract NoteDao noteDao();	public static synchronized NoteDataBase getInstance(Context context) {		if (instance == null) {			instance = Room.databaseBuilder(context.getApplicationContext(), NoteDataBase.class, "note_database")					.fallbackToDestructiveMigration()					.addCallback(roomCallBack)					.build();		}		return instance;	}	private static RoomDatabase.Callback roomCallBack = new RoomDatabase.Callback(){		@Override		public void onCreate(@NonNull SupportSQLiteDatabase db) {			super.onCreate(db);			new PopulateDb(instance).execute();		}	};	private static class PopulateDb extends AsyncTask<Void,Void,Void>{private NoteDao noteDao;		public PopulateDb(NoteDataBase  dataBase) {			this.noteDao = dataBase.noteDao();		}		@Override		protected Void doInBackground(Void... voids) {			noteDao.insertNote(new Note("title1","Test1",1));			noteDao.insertNote(new Note("title2","Test2",2));			noteDao.insertNote(new Note("title3","Test3",3));			noteDao.insertNote(new Note("title4","Test4",4));			noteDao.insertNote(new Note("title5","Test5",4));			return null;		}	}}